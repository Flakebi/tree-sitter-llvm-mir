================================================================================
Basic example
================================================================================
bb.0:
  %s32:_(s32) = G_IMPLICIT_DEF
  %v2s32:_(<2 x s32>) = G_IMPLICIT_DEF
  %s64:_(s64) = G_IMPLICIT_DEF
  %v2s64:_(<2 x s64>) = G_IMPLICIT_DEF

  ; CHECK: Shifts and rotates require operands to be either all scalars or all vectors
  %shl:_(<2 x s64>) = G_SHL %v2s64, %s64

  ; CHECK: Shifts and rotates require operands to be either all scalars or all vectors
  %lshr:_(s32) = G_LSHR %s32, %v2s32

  ; CHECK: Shifts and rotates require operands to be either all scalars or all vectors
  %ashr:_(<2 x s32>) = G_ASHR %v2s32, %s64

--------------------------------------------------------------------------------

(body
  (basic_block
    (label
      (identifier))
    (instruction
      (register_operand
        (var)
        (registerclass)
        (low_level_type
          (primitive_type)))
      (identifier))
    (instruction
      (register_operand
        (var)
        (registerclass)
        (low_level_type
          (number)
          (primitive_type)))
      (identifier))
    (instruction
      (register_operand
        (var)
        (registerclass)
        (low_level_type
          (primitive_type)))
      (identifier))
    (instruction
      (register_operand
        (var)
        (registerclass)
        (low_level_type
          (number)
          (primitive_type)))
      (identifier))
    (comment)
    (instruction
      (register_operand
        (var)
        (registerclass)
        (low_level_type
          (number)
          (primitive_type)))
      (identifier)
      (argument
        (machine_operand
          (register_operand
            (var))))
      (argument
        (machine_operand
          (register_operand
            (var)))))
    (comment)
    (instruction
      (register_operand
        (var)
        (registerclass)
        (low_level_type
          (primitive_type)))
      (identifier)
      (argument
        (machine_operand
          (register_operand
            (var))))
      (argument
        (machine_operand
          (register_operand
            (var)))))
    (comment)
    (instruction
      (register_operand
        (var)
        (registerclass)
        (low_level_type
          (number)
          (primitive_type)))
      (identifier)
      (argument
        (machine_operand
          (register_operand
            (var))))
      (argument
        (machine_operand
          (register_operand
            (var)))))))

================================================================================
Block with align
================================================================================
bb.0 (align 16):

--------------------------------------------------------------------------------

(body
  (basic_block
    (label
      (identifier))
    (attribute
      (number))))

================================================================================
Block with ir-block
================================================================================
bb.0 (%ir-block.3):

--------------------------------------------------------------------------------

(body
  (basic_block
    (label
      (identifier))
    (attribute
      (ir_block))))

================================================================================
Block with bbsections
================================================================================
bb.0 (align 16, %ir-block.2, bbsections 1):

--------------------------------------------------------------------------------

(body
  (basic_block
    (label
      (identifier))
    (attribute
      (number))
    (attribute
      (ir_block))
    (attribute
      (number))))

================================================================================
successors
================================================================================
bb.0:
  successors: %bb.4(0x40000000), %bb.1(0x40000000)

--------------------------------------------------------------------------------

(body
  (basic_block
    (label
      (identifier))
    (successors
      (bb_ref)
      (number)
      (bb_ref)
      (number))))

================================================================================
liveins
================================================================================
bb.0:
  liveins: $r4, $lr

--------------------------------------------------------------------------------

(body
  (basic_block
    (label
      (identifier))
    (liveins
      (register
        (physical_register))
      (register
        (physical_register)))))

================================================================================
implicit result
================================================================================
bb.0:
  implicit $exec, implicit $vcc = V_CMPX_EQ_I32_e32 $vgpr0, $vgpr1, implicit $exec

--------------------------------------------------------------------------------

(body
  (basic_block
    (label
      (identifier))
    (instruction
      (register_operand
        (register_flag)
        (physical_register))
      (register_operand
        (register_flag)
        (physical_register))
      (identifier)
      (argument
        (machine_operand
          (register_operand
            (physical_register))))
      (argument
        (machine_operand
          (register_operand
            (physical_register))))
      (argument
        (machine_operand
          (register_operand
            (register_flag)
            (physical_register)))))))
